pipeline {
    agent {
            label 'AGENT-1'
         }
    options {
        // Timeout counter starts AFTER agent is allocated
        timeout(time: 30, unit: 'SECONDS')
       //  disableConcurrentBuilds()
    }
     parameters {
        string(name: 'PERSON', defaultValue: 'Mr Jenkins', description: 'Who should I say hello to?')
        text(name: 'BIOGRAPHY', defaultValue: '', description: 'Enter some information about the person')
        booleanParam(name: 'TOGGLE', defaultValue: true, description: 'Toggle this value')
        choice(name: 'CHOICE', choices: ['One', 'Two', 'Three'], description: 'Pick something')
        password(name: 'PASSWORD', defaultValue: 'SECRET', description: 'Enter a password')
    }

   environment {
                DEPLOY_TO = 'Production'
                GREETING = 'Good Morning'
            }
    stages {
        stage('Build') { 
            steps {
                sh 'echo This is build'
               // sh 'sleep 10'
                sh 'env'
                
            }
        }
        stage('Test') { 
            steps {
               sh 'echo This is Test'
            }
        }
        stage('Deploy') { 
            steps {
              sh 'echo This is Deploy'
            
            }
        }
        stage('Print Params') { 
            steps {
                echo "Hello ${params.PERSON}"
                echo "Biography: ${params.BIOGRAPHY}"
                echo "Toggle: ${params.TOGGLE}"
                echo "Choice: ${params.CHOICE}"
                echo "Password: ${params.PASSWORD}"
              //  error 'This is error msg'
            }
         }
    }
     post { 
        always { 
            echo 'I will always say Hello Always!'
        }
        success { 
            echo 'I will always say Hello Success!'
        }
        failure{ 
            echo 'I will always say Hello failure!'
        }
        
    }
    
}

-----------------------

// Jenkins Pipeline Syntax:

// Pipeline {
//    agent {
//           label ' '
//      }
//     options {
//         timeout(30, UNITS: minutes)
//     }
//     parameters { 
//          string(name: ' ', defaultValue: ' ')
//     }
//     environment {
//         nexusUrl: ' '
//     }
//     stages {
//         stage('Build') {
//              steps {
//                   echo 'Building..'
//                     }
//                 }
//             stage('Test') {
//                  steps {
//                      echo 'Testing..'
//                         }
//                     }
//             stage('Deploy') {
//                  steps {
//                        echo 'Deploying....'
//                     }
//     }
// post {
//        always { 
//             echo 'I will always say Hello again! -  always'
//         }
//     success { 
//             echo 'I will always say Hello again! - success'
//         }
//     failure { 
//             echo 'I will always say Hello again! - failure'
//         }
//    }

// }